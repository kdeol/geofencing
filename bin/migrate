#!/usr/bin/env node

var fs = require('fs');
var stream = require('stream');
var es = require('event-stream');
var parse = require('csv-parse');
var moment = require('moment');

//first get all the files in the sample_data directory
fs.readdir('./sample_data', function(err, filenames) {
  if (err) {
    throw err;
    return;
  }

  //for every file in the directory, read the CSV in to MongoDB
  var expected = 0;
  var finished = 0;
  filenames.forEach(function(filename) {
    if(filename.startsWith('.'))
      return;
    expected++;
    var tripRecords = [];
    var reader = fs.createReadStream('./sample_data/' + filename);
    var writer = fs.createWriteStream('./transform_sample_data/TRANSFORM-' + filename, {flags: 'w', encoding: 'utf-8',mode: 0666});
    var rowCount = 0; // to keep track of where we are
    var nextDropoff = null;
    var transform = function(row) {
        reader.pause();
        row = row.split(",");

        if ( rowCount === 0 ) {
          //do nothing and skip header row
        } else if (rowCount%2 == 1) { //odd row, so use location as dropoff for next row
          nextDropoff = {"lat": row[1], "lon": row[2]};
        } else {
          //create GeoJSON record using previous pickup point (which has longitude first)
          var trip = {
            "timestamp": new Date((row[0]).replace(/['"]+/g, '')),
            "loc": {
              "type": "LineString",
              "coordinates": [ [parseFloat(row[2]), parseFloat(row[1])], [parseFloat(nextDropoff.lon), parseFloat(nextDropoff.lat)]]}
          };
          var coord = trip.loc.coordinates;
          //only add trip if beginning is not the same as the end and both exist
          if((coord[0][0] && coord[0][1] && coord[1][0] && coord[1][1])
            && coord[0][0] !== coord[1][0] && coord[0][1] !== coord[1][1]) {
            tripRecords.push(trip);
          }
        }
        rowCount++;
        reader.resume();
      };

    reader
      .pipe(es.split())
      .pipe(es.mapSync(transform)).on('error', function(err){
        console.log('Error while reading file.');
        throw err;
      }).on('end',function() {
        console.log("DONE PARSING %s!\n", filename);
        //write transformed csv to intermediate output file that will be uploaded to mongodb
        writer.write(JSON.stringify(tripRecords));
        //Use expected and finished so we know when we have processed all the files
        if(expected == ++finished) {
          process.exit();
        }
    });
  });
});